package net.glowstone.net.protocol;

import net.glowstone.net.codec.KickCodec;
import net.glowstone.net.codec.SetCompressionCodec;
import net.glowstone.net.codec.play.entity.*;
import net.glowstone.net.codec.play.game.*;
import net.glowstone.net.codec.play.inv.*;
import net.glowstone.net.codec.play.player.*;
import net.glowstone.net.codec.play.scoreboard.ScoreboardDisplayCodec;
import net.glowstone.net.codec.play.scoreboard.ScoreboardObjectiveCodec;
import net.glowstone.net.codec.play.scoreboard.ScoreboardScoreCodec;
import net.glowstone.net.codec.play.scoreboard.ScoreboardTeamCodec;
import net.glowstone.net.message.KickMessage;
import net.glowstone.net.message.SetCompressionMessage;
import net.glowstone.net.message.play.entity.*;
import net.glowstone.net.message.play.game.*;
import net.glowstone.net.message.play.inv.*;
import net.glowstone.net.message.play.player.*;
import net.glowstone.net.message.play.scoreboard.ScoreboardDisplayMessage;
import net.glowstone.net.message.play.scoreboard.ScoreboardObjectiveMessage;
import net.glowstone.net.message.play.scoreboard.ScoreboardScoreMessage;
import net.glowstone.net.message.play.scoreboard.ScoreboardTeamMessage;

import org.dragonet.proxy.network.handler.play.NOPHandler;

public final class PlayProtocol extends GlowProtocol {
    public PlayProtocol() {
        super("PLAY", 0x49);

        outbound(0x00, PingMessage.class, PingCodec.class);
        outbound(0x01, IncomingChatMessage.class, IncomingChatCodec.class);
        outbound(0x02, InteractEntityMessage.class, InteractEntityCodec.class);
        outbound(0x03, PlayerUpdateMessage.class, PlayerUpdateCodec.class);
        outbound(0x04, PlayerPositionMessage.class, PlayerPositionCodec.class);
        outbound(0x05, PlayerLookMessage.class, PlayerLookCodec.class);
        outbound(0x06, PlayerPositionLookMessage.class, PlayerPositionLookCodec.class);
        outbound(0x07, DiggingMessage.class, DiggingCodec.class);
        outbound(0x08, BlockPlacementMessage.class, BlockPlacementCodec.class);
        outbound(0x09, HeldItemMessage.class, HeldItemCodec.class);
        outbound(0x0A, PlayerSwingArmMessage.class, PlayerSwingArmCodec.class);
        outbound(0x0B, PlayerActionMessage.class, PlayerActionCodec.class);
        outbound(0x0C, SteerVehicleMessage.class, SteerVehicleCodec.class);
        outbound(0x0D, CloseWindowMessage.class, CloseWindowCodec.class);
        outbound(0x0E, WindowClickMessage.class, WindowClickCodec.class);
        outbound(0x0F, TransactionMessage.class, TransactionCodec.class);
        outbound(0x10, CreativeItemMessage.class, CreativeItemCodec.class);
        outbound(0x11, EnchantItemMessage.class, EnchantItemCodec.class);
        outbound(0x12, UpdateSignMessage.class, UpdateSignCodec.class);
        outbound(0x13, PlayerAbilitiesMessage.class, PlayerAbilitiesCodec.class);
        outbound(0x14, TabCompleteMessage.class, TabCompleteCodec.class);
        outbound(0x15, ClientSettingsMessage.class, ClientSettingsCodec.class);
        outbound(0x16, ClientStatusMessage.class, ClientStatusCodec.class);
        outbound(0x17, PluginMessage.class, PluginMessageCodec.class);
        outbound(0x18, SpectateMessage.class, SpectateCodec.class);
        outbound(0x19, ResourcePackStatusMessage.class, ResourcePackStatusCodec.class);

        inbound(0x00, PingMessage.class, PingCodec.class, NOPHandler.class);
        inbound(0x01, JoinGameMessage.class, JoinGameCodec.class, NOPHandler.class);
        inbound(0x02, ChatMessage.class, ChatCodec.class, NOPHandler.class);
        inbound(0x03, TimeMessage.class, TimeCodec.class, NOPHandler.class);
        inbound(0x04, EntityEquipmentMessage.class, EntityEquipmentCodec.class, NOPHandler.class);
        inbound(0x05, SpawnPositionMessage.class, SpawnPositionCodec.class, NOPHandler.class);
        inbound(0x06, HealthMessage.class, HealthCodec.class, NOPHandler.class);
        inbound(0x07, RespawnMessage.class, RespawnCodec.class, NOPHandler.class);
        inbound(0x08, PositionRotationMessage.class, PositionRotationCodec.class, NOPHandler.class);
        inbound(0x09, HeldItemMessage.class, HeldItemCodec.class, NOPHandler.class);
        inbound(0x0A, UseBedMessage.class, UseBedCodec.class, NOPHandler.class);
        inbound(0x0B, AnimateEntityMessage.class, AnimateEntityCodec.class, NOPHandler.class);
        inbound(0x0C, SpawnPlayerMessage.class, SpawnPlayerCodec.class, NOPHandler.class);
        inbound(0x0D, CollectItemMessage.class, CollectItemCodec.class, NOPHandler.class);
        inbound(0x0E, SpawnObjectMessage.class, SpawnObjectCodec.class, NOPHandler.class);
        inbound(0x0F, SpawnMobMessage.class, SpawnMobCodec.class, NOPHandler.class);
        inbound(0x10, SpawnPaintingMessage.class, SpawnPaintingCodec.class, NOPHandler.class);
        inbound(0x11, SpawnXpOrbMessage.class, SpawnXpOrbCodec.class, NOPHandler.class);
        inbound(0x12, EntityVelocityMessage.class, EntityVelocityCodec.class, NOPHandler.class);
        inbound(0x13, DestroyEntitiesMessage.class, DestroyEntitiesCodec.class, NOPHandler.class);
        inbound(0x15, RelativeEntityPositionMessage.class, RelativeEntityPositionCodec.class, NOPHandler.class);
        inbound(0x16, EntityRotationMessage.class, EntityRotationCodec.class, NOPHandler.class);
        inbound(0x17, RelativeEntityPositionRotationMessage.class, RelativeEntityPositionRotationCodec.class, NOPHandler.class);
        inbound(0x18, EntityTeleportMessage.class, EntityTeleportCodec.class, NOPHandler.class);
        inbound(0x19, EntityHeadRotationMessage.class, EntityHeadRotationCodec.class, NOPHandler.class);
        inbound(0x1A, EntityStatusMessage.class, EntityStatusCodec.class, NOPHandler.class);
        inbound(0x1B, AttachEntityMessage.class, AttachEntityCodec.class, NOPHandler.class);
        inbound(0x1C, EntityMetadataMessage.class, EntityMetadataCodec.class, NOPHandler.class);
        inbound(0x1D, EntityEffectMessage.class, EntityEffectCodec.class, NOPHandler.class);
        inbound(0x1E, EntityRemoveEffectMessage.class, EntityRemoveEffectCodec.class, NOPHandler.class);
        inbound(0x1F, ExperienceMessage.class, ExperienceCodec.class, NOPHandler.class);
        inbound(0x20, EntityPropertyMessage.class, EntityPropertyCodec.class, NOPHandler.class);
        inbound(0x21, ChunkDataMessage.class, ChunkDataCodec.class, NOPHandler.class);
        inbound(0x22, MultiBlockChangeMessage.class, MultiBlockChangeCodec.class, NOPHandler.class);
        inbound(0x23, BlockChangeMessage.class, BlockChangeCodec.class, NOPHandler.class);
        inbound(0x24, BlockActionMessage.class, BlockActionCodec.class, NOPHandler.class);
        inbound(0x26, ChunkBulkMessage.class, ChunkBulkCodec.class, NOPHandler.class);
        inbound(0x27, ExplosionMessage.class, ExplosionCodec.class, NOPHandler.class);
        inbound(0x28, PlayEffectMessage.class, PlayEffectCodec.class, NOPHandler.class);
        inbound(0x29, PlaySoundMessage.class, PlaySoundCodec.class, NOPHandler.class);
        inbound(0x2A, PlayParticleMessage.class, PlayParticleCodec.class, NOPHandler.class);
        inbound(0x2B, StateChangeMessage.class, StateChangeCodec.class, NOPHandler.class);
        inbound(0x2C, SpawnLightningStrikeMessage.class, SpawnLightningStrikeCodec.class, NOPHandler.class);
        inbound(0x2D, OpenWindowMessage.class, OpenWindowCodec.class, NOPHandler.class);
        inbound(0x2E, CloseWindowMessage.class, CloseWindowCodec.class, NOPHandler.class);
        inbound(0x2F, SetWindowSlotMessage.class, SetWindowSlotCodec.class, NOPHandler.class);
        inbound(0x30, SetWindowContentsMessage.class, SetWindowContentsCodec.class, NOPHandler.class);
        inbound(0x31, WindowPropertyMessage.class, WindowPropertyCodec.class, NOPHandler.class);
        inbound(0x32, TransactionMessage.class, TransactionCodec.class, NOPHandler.class);
        inbound(0x33, UpdateSignMessage.class, UpdateSignCodec.class, NOPHandler.class);
        inbound(0x34, MapDataMessage.class, MapDataCodec.class, NOPHandler.class);
        inbound(0x35, UpdateBlockEntityMessage.class, UpdateBlockEntityCodec.class, NOPHandler.class);
        inbound(0x36, SignEditorMessage.class, SignEditorCodec.class, NOPHandler.class);
        inbound(0x37, StatisticMessage.class, StatisticCodec.class, NOPHandler.class);
        inbound(0x38, UserListItemMessage.class, UserListItemCodec.class, NOPHandler.class);
        inbound(0x39, PlayerAbilitiesMessage.class, PlayerAbilitiesCodec.class, NOPHandler.class);
        inbound(0x3A, TabCompleteResponseMessage.class, TabCompleteResponseCodec.class, NOPHandler.class);
        inbound(0x3B, ScoreboardObjectiveMessage.class, ScoreboardObjectiveCodec.class, NOPHandler.class);
        inbound(0x3C, ScoreboardScoreMessage.class, ScoreboardScoreCodec.class, NOPHandler.class);
        inbound(0x3D, ScoreboardDisplayMessage.class, ScoreboardDisplayCodec.class, NOPHandler.class);
        inbound(0x3E, ScoreboardTeamMessage.class, ScoreboardTeamCodec.class, NOPHandler.class);
        inbound(0x3F, PluginMessage.class, PluginMessageCodec.class, NOPHandler.class);
        inbound(0x40, KickMessage.class, KickCodec.class, NOPHandler.class);
        inbound(0x41, ServerDifficultyMessage.class, ServerDifficultyCodec.class, NOPHandler.class);
        inbound(0x42, CombatEventMessage.class, CombatEventCodec.class, NOPHandler.class);
        inbound(0x43, CameraMessage.class, CameraCodec.class, NOPHandler.class);
        inbound(0x44, WorldBorderMessage.class, WorldBorderCodec.class, NOPHandler.class);
        inbound(0x45, TitleMessage.class, TitleCodec.class, NOPHandler.class);
        inbound(0x46, SetCompressionMessage.class, SetCompressionCodec.class, NOPHandler.class);
        inbound(0x47, UserListHeaderFooterMessage.class, UserListHeaderFooterCodec.class, NOPHandler.class);
        inbound(0x48, ResourcePackSendMessage.class, ResourcePackSendCodec.class, NOPHandler.class);
        inbound(0x49, UpdateEntityNBTMessage.class, UpdateEntityNBTCodec.class, NOPHandler.class);
    }
}
